@using MudBlazor

@inherits BlazorBusyComponentBaseAuthModel

<div style="display: grid; grid-template-columns: 1fr auto; align-items: center; width: 100%" class="@(ItemModel?.IsDisabled == true ? "text-decoration-line-through opacity-25": "")">
    <MudStack Row="true">
        @if (IsRenameMode)
        {
            <div class="row">
                <div class="col-auto">
                    <input @bind-value="itemSystemName" @bind-value:event="oninput" class="form-control form-control-sm@(string.IsNullOrWhiteSpace(itemSystemName) ? " border border-warning-subtle" : "")" autocomplete="off" placeholder="Имя">
                </div>
                <div class="col-auto">
                    <button @onclick="SaveRubric" disabled="@(!IsEditedName)" type="button" class="btn btn-outline-info btn-sm">Сохранить</button>
                </div>
                <div class="col-auto">
                    <button @onclick="() => { itemSystemName = ItemModel?.Name; IsRenameMode = false; }" type="button" class="btn btn-outline-info btn-sm">Отмена</button>
                </div>
            </div>
        }
        else
        {
            <span class="font-monospace">@Item.Text</span>
        }
    </MudStack>
    <div style="justify-self: end;">
        <div class="row">
            @if (ItemModel?.IsDisabled == true)
            {
                <div class="col-auto">
                    <p class="lead">
                        Деактивирован.
                    </p>
                </div>
            }
            @if (!IsRenameMode)
            {
                <div class="col-auto">
                    <div class="hstack">
                        @if (!ReadOnly)
                        {
                            <MudIconButton OnClick="() => MoveRow( DirectionsEnum.Up, Item)" Disabled="CantUpMove.Contains(Item.MoveRowState)" Icon="@Icons.Material.Filled.ArrowDropUp"></MudIconButton>
                            <MudIconButton OnClick="() => MoveRow( DirectionsEnum.Down, Item)" Disabled="CantDownMove.Contains(Item.MoveRowState)" Icon="@Icons.Material.Filled.ArrowDropDown"></MudIconButton>
                            <div class="btn-group" role="group" aria-label="Basic example">
                                <button title="Переименовать элемент" @onclick="() => IsRenameMode = true" type="button" class="btn btn-outline-info btn-sm bi bi bi-pencil"></button>
                                <button disabled="@IsEditedName" @onclick="async () => { ItemModel!.IsDisabled = !ItemModel.IsDisabled; await SaveRubric(); }" type="button" class="btn btn-outline-@(ItemModel?.IsDisabled == true ? "secondary" : "info") btn-sm bi bi-toggle-@(ItemModel?.IsDisabled == true ? "off" : "on")"></button>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>