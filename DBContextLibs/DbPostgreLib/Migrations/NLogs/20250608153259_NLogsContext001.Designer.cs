// <auto-generated />
using System;
using DbcLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DbPostgreLib.Migrations.NLogs
{
    [DbContext(typeof(NLogsContext))]
    [Migration("20250608153259_NLogsContext001")]
    partial class NLogsContext001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SharedLib.NLogRecordModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AllEventProperties")
                        .HasColumnType("text");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("text");

                    b.Property<string>("CallSite")
                        .HasColumnType("text");

                    b.Property<string>("ContextPrefix")
                        .HasColumnType("text");

                    b.Property<string>("ExceptionMessage")
                        .HasColumnType("text");

                    b.Property<string>("Logger")
                        .HasColumnType("text");

                    b.Property<string>("RecordLevel")
                        .HasColumnType("text");

                    b.Property<string>("RecordMessage")
                        .HasColumnType("text");

                    b.Property<DateTime>("RecordTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StackTrace")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationName");

                    b.HasIndex("ContextPrefix");

                    b.HasIndex("Logger");

                    b.HasIndex("RecordLevel");

                    b.HasIndex("RecordTime");

                    b.ToTable("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
