// <auto-generated />
using System;
using System.Collections.Generic;
using DbcLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DbPostgreLib.Migrations.Bank
{
    [DbContext(typeof(BankContext))]
    partial class BankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SharedLib.AgentDataModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgentSign")
                        .HasColumnType("integer");

                    b.Property<string>("OperationName")
                        .HasColumnType("text");

                    b.Property<string>("OperatorAddress")
                        .HasColumnType("text");

                    b.Property<string>("OperatorInn")
                        .HasColumnType("text");

                    b.Property<string>("OperatorName")
                        .HasColumnType("text");

                    b.PrimitiveCollection<string[]>("Phones")
                        .HasColumnType("text[]");

                    b.Property<string>("PhonesJsonSource")
                        .HasColumnType("text");

                    b.Property<int>("ReceiptItemId")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<string[]>("ReceiverPhones")
                        .HasColumnType("text[]");

                    b.Property<string>("ReceiverPhonesJsonSource")
                        .HasColumnType("text");

                    b.PrimitiveCollection<List<string>>("TransferPhones")
                        .HasColumnType("text[]");

                    b.Property<string>("TransferPhonesJsonSource")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptItemId")
                        .IsUnique();

                    b.ToTable("AgentsForReceiptItemsTBank");
                });

            modelBuilder.Entity("SharedLib.BankConnectionModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BankInterface")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastChecked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankInterface");

                    b.HasIndex("LastChecked");

                    b.ToTable("ConnectionsBanks");
                });

            modelBuilder.Entity("SharedLib.BankTransferModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("BankConnectionId")
                        .HasColumnType("integer");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("CustomerBankId")
                        .HasColumnType("integer");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Amount");

                    b.HasIndex("BankConnectionId");

                    b.HasIndex("Currency");

                    b.HasIndex("CustomerBankId");

                    b.HasIndex("Receiver");

                    b.HasIndex("Sender");

                    b.HasIndex("Timestamp");

                    b.HasIndex("TransactionId");

                    b.ToTable("TransfersBanks");
                });

            modelBuilder.Entity("SharedLib.CustomerBankIdModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BankIdentifyType")
                        .HasColumnType("integer");

                    b.Property<string>("Inn")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("UserIdentityId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BankIdentifyType");

                    b.HasIndex("Inn");

                    b.HasIndex("Name");

                    b.ToTable("CustomersBanksIds");
                });

            modelBuilder.Entity("SharedLib.IncomingMerchantPaymentTBankModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("CardId")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ExpDate")
                        .HasColumnType("text");

                    b.Property<string>("OrderId")
                        .HasColumnType("text");

                    b.Property<string>("Pan")
                        .HasColumnType("text");

                    b.Property<string>("PaymentId")
                        .HasColumnType("text");

                    b.Property<string>("RebillId")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Amount");

                    b.HasIndex("CardId");

                    b.HasIndex("ExpDate");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("RebillId");

                    b.HasIndex("Status");

                    b.ToTable("IncomingMerchantsPaymentsTBank");
                });

            modelBuilder.Entity("SharedLib.PaymentInitTBankQRModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ApiException")
                        .HasColumnType("text");

                    b.Property<string>("DataQR")
                        .HasColumnType("text");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<string>("ErrorCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean");

                    b.Property<string>("TerminalKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TypeQR")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ErrorCode");

                    b.HasIndex("Success");

                    b.HasIndex("TerminalKey");

                    b.HasIndex("TypeQR");

                    b.ToTable("QrForInitPaymentTBank");
                });

            modelBuilder.Entity("SharedLib.PaymentInitTBankResultModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("ApiException")
                        .HasColumnType("text");

                    b.Property<string>("AuthorUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDateTimeUTC")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Details")
                        .HasColumnType("text");

                    b.Property<string>("ErrorCode")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PaymentId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PaymentQRId")
                        .HasColumnType("integer");

                    b.Property<string>("PaymentURL")
                        .HasColumnType("text");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("integer");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean");

                    b.Property<string>("TerminalKey")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Amount");

                    b.HasIndex("AuthorUserId");

                    b.HasIndex("CreatedDateTimeUTC");

                    b.HasIndex("ErrorCode");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("PaymentQRId");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("Status");

                    b.HasIndex("Success");

                    b.HasIndex("TerminalKey");

                    b.ToTable("PaymentsInitResultsTBank");
                });

            modelBuilder.Entity("SharedLib.PaymentsForReceiptTBankModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AdvancePayment")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("Cash")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("Credit")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("Electronic")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("Provision")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("PaymentsForReceiptsTBank");
                });

            modelBuilder.Entity("SharedLib.ReceiptItemModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ean13")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("integer");

                    b.Property<int?>("PaymentObject")
                        .HasColumnType("integer");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("integer");

                    b.Property<int>("Tax")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ReceiptsItemsTBank");
                });

            modelBuilder.Entity("SharedLib.ReceiptTBankModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmailCompany")
                        .HasColumnType("text");

                    b.Property<int?>("PaymentsId")
                        .HasColumnType("integer");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Taxation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PaymentsId");

                    b.ToTable("ReceiptsTBank");
                });

            modelBuilder.Entity("SharedLib.SupplierInfoModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhonesJsonSource")
                        .HasColumnType("text");

                    b.Property<int>("ReceiptItemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptItemId")
                        .IsUnique();

                    b.ToTable("SuppliersForReceiptItemsTBank");
                });

            modelBuilder.Entity("SharedLib.TBankAccountModelDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ActivationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("BankBik")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BankConnectionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("MainFlag")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TariffCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TariffName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumber");

                    b.HasIndex("AccountType");

                    b.HasIndex("ActivationDate");

                    b.HasIndex("BankBik");

                    b.HasIndex("BankConnectionId");

                    b.HasIndex("CreatedOn");

                    b.HasIndex("Currency");

                    b.HasIndex("IsActive");

                    b.HasIndex("MainFlag");

                    b.HasIndex("Name");

                    b.HasIndex("Status");

                    b.HasIndex("TariffCode");

                    b.ToTable("AccountsTBank");
                });

            modelBuilder.Entity("SharedLib.AgentDataModelDB", b =>
                {
                    b.HasOne("SharedLib.ReceiptItemModelDB", "ReceiptItem")
                        .WithOne("AgentData")
                        .HasForeignKey("SharedLib.AgentDataModelDB", "ReceiptItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptItem");
                });

            modelBuilder.Entity("SharedLib.BankTransferModelDB", b =>
                {
                    b.HasOne("SharedLib.BankConnectionModelDB", "BankConnection")
                        .WithMany()
                        .HasForeignKey("BankConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SharedLib.CustomerBankIdModelDB", "CustomerBank")
                        .WithMany()
                        .HasForeignKey("CustomerBankId");

                    b.Navigation("BankConnection");

                    b.Navigation("CustomerBank");
                });

            modelBuilder.Entity("SharedLib.PaymentInitTBankResultModelDB", b =>
                {
                    b.HasOne("SharedLib.PaymentInitTBankQRModelDB", "PaymentQR")
                        .WithMany()
                        .HasForeignKey("PaymentQRId");

                    b.HasOne("SharedLib.ReceiptTBankModelDB", "Receipt")
                        .WithMany()
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentQR");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("SharedLib.ReceiptItemModelDB", b =>
                {
                    b.HasOne("SharedLib.ReceiptTBankModelDB", "Receipt")
                        .WithMany("Items")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("SharedLib.ReceiptTBankModelDB", b =>
                {
                    b.HasOne("SharedLib.PaymentsForReceiptTBankModelDB", "Payments")
                        .WithMany()
                        .HasForeignKey("PaymentsId");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("SharedLib.SupplierInfoModelDB", b =>
                {
                    b.HasOne("SharedLib.ReceiptItemModelDB", "ReceiptItem")
                        .WithOne("SupplierInfo")
                        .HasForeignKey("SharedLib.SupplierInfoModelDB", "ReceiptItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptItem");
                });

            modelBuilder.Entity("SharedLib.TBankAccountModelDB", b =>
                {
                    b.HasOne("SharedLib.BankConnectionModelDB", "BankConnection")
                        .WithMany()
                        .HasForeignKey("BankConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankConnection");
                });

            modelBuilder.Entity("SharedLib.ReceiptItemModelDB", b =>
                {
                    b.Navigation("AgentData");

                    b.Navigation("SupplierInfo");
                });

            modelBuilder.Entity("SharedLib.ReceiptTBankModelDB", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
