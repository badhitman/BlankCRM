@inherits BlazorBusyComponentBaseAuthModel

<tr>
    @if (IsBusyProgress)
    {
        <th colspan="3">
            <div class="text-center">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        </th>
    }
    else if (IsEditRow)
    {
        <th colspan="3">
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <form class="row g-3">
                    <div class="col-md-4">
                        <label for="exampleInputName1" class="form-label">Имя</label>
                        <input @bind-value="_field_master.Name" @bind-value:event="oninput" type="text" class="form-control" id="exampleInputName1" aria-describedby="exampleInputName1Help" readonly="@(!ParentFormsPage.CanEditProject)" />
                        <div id="exampleInputName1Help" class="form-text">Уникальное название</div>
                    </div>
                    <div class="col-md-4">
                        <label for="inputCSS4" class="form-label">CSS обёртки</label>
                        <input @bind-value="_field_master.Css" @bind-value:event="oninput" type="text" class="form-control" id="inputCSS4" aria-describedby="inputCSS4Help" readonly="@(!ParentFormsPage.CanEditProject)" />
                        <div id="inputCSS4Help" class="form-text">Стили для DIV блока-обёртки поля</div>
                    </div>
                    <div class="col-4">
                        <label for="exampleInputHint1" class="form-label">Подсказка</label>
                        <input @bind-value="_field_master.Hint" @bind-value:event="oninput" type="text" class="form-control" id="exampleInputHint1" aria-describedby="hintHelp" readonly="@(!ParentFormsPage.CanEditProject)" />
                        <div id="hintHelp" class="form-text">Текст подсказки под полем формы</div>
                    </div>
                    <div class="col-12">
                        <div class="mb-3 form-check">
                            <input @bind="_field_master.Required" type="checkbox" class="form-check-input" id="exampleCheck1" disabled="@(!ParentFormsPage.CanEditProject)">
                            <label class="form-check-label" for="exampleCheck1">Обязательный</label>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="mb-3">
                            <label for="@(_currentTemplateInputRichText_ref?.UID)" class="form-label">Описание</label>
                            <InputRichTextComponent @bind-Value="_field_master.Description" @ref="_currentTemplateInputRichText_ref" ReadOnly="@(!ParentFormsPage.CanEditProject)" />
                        </div>
                    </div>
                    <CascadingValue Value="SetFieldAction">
                        @if (_field_master is FieldFormConstructorModelDB sf)
                        {
                            <FieldFormRowEditComponent Field="sf" @ref="FieldEditUI_ref" />
                        }
                        else if (_field_master is FieldFormAkaDirectoryConstructorModelDB df)
                        {
                            <FieldDirectoryFormRowEditComponent Field="df" @ref="FieldDirUI_ref" />
                        }
                        else
                        {
                            <div class="alert alert-danger" role="alert">
                                `@(_field_master.GetType().Name)`. Ошибка 66CB949A-9E66-4312-899E-DCA358E8574B
                            </div>
                        }
                    </CascadingValue>
                    <div class="col-12">
                        <div class="hstack mt-3">
                            <div></div>
                            <MudSpacer />
                            <div class="btn-group" role="group">
                                @if (ParentFormsPage.CanEditProject)
                                {
                                    if (!Field.Equals(_field_master) && CanSave)
                                    {
                                        <button @onclick="ResetEditField" type="button" class="btn btn-outline-primary">Сброс</button>
                                        <button @onclick="SaveEditField" type="button" class="btn btn-outline-primary">Сохранить</button>
                                    }
                                    else
                                    {
                                        <button disabled type="button" class="btn btn-primary">Сохранить</button>
                                    }
                                }
                                <SessionsValuesOfFieldViewComponent @ref="_sessionsValuesOfFieldViewComponent_Ref" FieldName="@Field.Name" ShowReferralsHandler="ShowReferrals" />
                            </div>
                        </div>
                    </div>
                </form>
                @if (_elements?.Any() == true)
                {
                    <hr />
                    <MudAlert ShowCloseIcon="true" CloseIconClicked="(() => _elements = null)" Class="d-flex flex-column flex-grow-1">
                        <MudSimpleTable Style="overflow-x: auto;" Class="d-flex flex-column flex-grow-1">
                            <thead>
                                <tr>
                                    <th>Ссылка</th>
                                    <th>Создан</th>
                                    <th>Наблюдатели</th>
                                    <th>Информация</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (EntryDictModel row in _elements)
                                {
                                    Dictionary<string, object>? _d = row.Tag;
                                    int? _count = _d?[nameof(Enumerable.Count)] as int?;
                                    DateTime? _created_at = _d?[nameof(SessionOfDocumentDataModelDB.CreatedAt)] as DateTime?;
                                    DateTime? _deadline_date = _d?.GetValueOrDefault(nameof(SessionOfDocumentDataModelDB.DeadlineDate)) as DateTime?;
                                    DateTime? _last_questionnaire_update_activity = _d?.GetValueOrDefault(nameof(SessionOfDocumentDataModelDB.LastDocumentUpdateActivity)) as DateTime?;
                                    string? _emails_notifications = _d?[nameof(SessionOfDocumentDataModelDB.EmailsNotifications)].ToString();
                                    SessionsStatusesEnum? _mark_as_done = _d?[nameof(SessionOfDocumentDataModelDB.SessionStatus)] as SessionsStatusesEnum?;

                                    <tr>
                                        <td>
                                            @row.Name
                                        </td>
                                        <td>@_created_at</td>
                                        <td>@_emails_notifications</td>
                                        <td>
                                            <div class="hstack gap-3">
                                                <div>
                                                    @(GetInfoRow(_mark_as_done, _deadline_date!.Value))
                                                </div>
                                                <MudSpacer />
                                                <button @onclick="async () => await ClearValuesForFieldName(row.Id)" type="button" class="btn btn-link" disabled="@(!ParentFormsPage.CanEditProject)">Удалить</button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </MudSimpleTable>
                        <div class="d-grid gap-2 mt-2">
                            <button @onclick="async () => await ClearValuesForFieldName(null)" class="btn btn-outline-danger" type="button" disabled="@(!ParentFormsPage.CanEditProject)">Очистить все</button>
                        </div>
                    </MudAlert>
                }
                <button @onclick="() => { IsEditRow = false; }" type="button" class="btn-close" aria-label="Close"></button>
            </div>
        </th>
    }
    else
    {
        <th scope="row">
            @_field_master.Name
            @if (_field_master.Required)
            {
                <sup class="ms-1 text-danger h6">*</sup>
            }
        </th>
        <td>
            @TypeNameMS
        </td>
        <td>
            <MudStack Row="true">
                <span>
                    @if (!string.IsNullOrWhiteSpace(_field_master.Css))
                    {
                        <sub title="html css class" class="text-secondary me-1">css:<u>@_field_master.Css</u></sub>
                    }

                    @if (_field_master is FieldFormConstructorModelDB sf)
                    {

                    }
                    else if (_field_master is FieldFormAkaDirectoryConstructorModelDB df)
                    {

                    }
                    else
                    {
                        <sup class="me-2">Ошибка определения типа данных поля `@(_field_master.GetType().Name)` A522A48F-045A-4032-B657-CBCF2ED770CF</sup>
                    }
                    @InformationField
                </span>
                <MudSpacer />
                @if (ParentFormsPage.CanEditProject)
                {
                    <MudIconButton OnClick="() => { IsEditRow = true; }" Size="Size.Small" Icon="@Icons.Material.Filled.Edit" Color="Color.Info" aria-label="Редактировать" />
                    <MudIconButton OnClick="MoveFieldUp" Disabled="!CanUp" Size="Size.Small" Icon="@Icons.Material.Filled.ArrowDropUp" aria-label="Выше" Color="@(CanUp ? Color.Success : Color.Default)" />
                    <MudIconButton OnClick="MoveFieldDown" Disabled="!CanDown" Size="Size.Small" Icon="@Icons.Material.Filled.ArrowDropDown" aria-label="Ниже" Color="@(CanDown ? Color.Success : Color.Default)" />
                    <MudIconButton OnClick="DeleteClick" Size="Size.Small" Icon="@Icons.Material.Filled.DeleteOutline" Color="@(Color.Warning)" aria-label="Удалить" />
                }
                else
                {
                    <i class="bi bi-eye my-btn" @onclick="() => { IsEditRow = true; }" title="Просмотр"></i>
                }
            </MudStack>
        </td>
    }
</tr>