@inherits BlazorBusyComponentBaseModel

<h3>Адаптер</h3>
@if (IsBusyProgress)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-3" />
}
else if (editAdapter is null)
{
    <figure class="text-center">
        <blockquote class="blockquote">
            <p>Адаптер не прочитан.</p>
        </blockquote>
        <figcaption class="blockquote-footer">
            Ошибка получения данных адаптера
        </figcaption>
    </figure>
}
else
{
    <MudSelect T="AdaptersTypesNames?" Label="Тип адаптера" @bind-Value="AdapterType">
        @foreach (AdaptersTypesNames state in Enum.GetValues<AdaptersTypesNames>())
        {
            <MudSelectItem T="AdaptersTypesNames?" Value="@state">@state.DescriptionInfo()</MudSelectItem>
        }
    </MudSelect>
    <div class="row g-3 mt-2">
        <div class="col-md-6">
            <label for="inputLogin4" class="form-label">Login</label>
            <input type="text" class="form-control" id="inputLogin4" @bind-value="editAdapter.Login" @bind-value:event="oninput">
        </div>
        <div class="col-md-6">
            <label for="inputPassword4" class="form-label">Password</label>
            <input type="password" class="form-control" id="inputPassword4" @bind-value="editAdapter.Password" @bind-value:event="oninput">
        </div>
        <div class="col-6">
            <label for="inputName" class="form-label">Name</label>
            <input type="text" class="form-control" id="inputName" @bind-value="editAdapter.Name" @bind-value:event="oninput">
        </div>
        <div class="col-6">
            <label for="inputAddress" class="form-label">Address</label>
            <input type="text" class="form-control" id="inputAddress" placeholder="127.0.0.1:5001" @bind-value="editAdapter.Address" @bind-value:event="oninput">
        </div>
        <div class="col-6">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="gridCheckIsDemo" @bind="editAdapter.IsDemo">
                <label class="form-check-label" for="gridCheckIsDemo">
                    Demo mode
                </label>
            </div>
        </div>
        <div class="col-6">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="gridCheckIsOnline" @bind="editAdapter.IsOnline" disabled="@(editAdapter.Id < 1)">
                <label class="form-check-label" for="gridCheckIsOnline">
                    @(editAdapter.IsOnline ? "Активный. Отключить?" : "Отключён. Включить?")
                </label>
            </div>
        </div>
        <div class="col-12">
            <div class="btn-group" role="group" aria-label="Basic example">
                <button @onclick="SaveAdapter" class="btn btn-primary" disabled="@(((originAdapter is null || editAdapter.Equals(originAdapter)) && editAdapter.Id > 0) || string.IsNullOrWhiteSpace(editAdapter.Address) || !GlobalToolsStandard.IsIpAddress(editAdapter.Address))">
                    @if (string.IsNullOrWhiteSpace(editAdapter.Address))
                    {
                        <text>Укажите IP адрес</text>
                    }
                    else if (string.IsNullOrWhiteSpace(editAdapter.Name))
                    {
                        <text>Укажите название</text>
                    }
                    else
                    {
                        <text>Сохранить</text>
                    }
                </button>
                @if (editAdapter.Id > 0)
                {
                    <button @onclick="DeleteAdapter" class="btn btn@(initDelete ? "" : "-outline")-danger">
                        @(initDelete ? "Подтвердить удаление?" : "Удаление")
                    </button>
                    @if (initDelete)
                    {
                        <button @onclick="() => initDelete = false" class="btn btn-outline-info">
                            Не удалять
                        </button>
                    }
                }
            </div>
        </div>
    </div>
}