@inherits BlazorBusyComponentBaseModel

<MudGrid>
    <MudItem xs="12" md="4">
        <MudTextField @bind-Value="_datePayment"
                      T="DateTime?"
                      Label="Date"
                      Format="yyyy-MM-dd"
                      InputType="InputType.Date"
                      Variant="Variant.Outlined"
                      Margin="Margin.Dense" Disabled="IsBusyProgress" />
    </MudItem>
    <MudItem xs="12" md="3">
        <MudNumericField @bind-Value="_valuePayment"
                         T="decimal?"
                         Label="Value"
                         Format="N2"
                         Culture="@_en"
                         Variant="Variant.Outlined"
                         Margin="Margin.Dense" Disabled="IsBusyProgress" />
    </MudItem>
    <MudItem xs="12" md="3">
        <MudSelect @bind-Value="_cashFlowType"
                   T="CashFlowTypesEnum"
                   Label="Type"
                   Variant="Variant.Outlined"
                   Margin="Margin.Dense" Disabled="IsBusyProgress">
            @foreach (CashFlowTypesEnum state in Enum.GetValues(typeof(CashFlowTypesEnum)))
            {
                <MudSelectItem T="CashFlowTypesEnum" Value="@state">@state</MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs="2" Class="d-flex align-content-center flex-wrap ">
        <MudIconButton Icon="@Icons.Material.Filled.AddCircle"
                       Variant="Variant.Outlined"
                       Color="Color.Primary"
                       OnClick="AddNewFlow"
                       Disabled="@(IsBusyProgress || _valuePayment <= 0 || !_datePayment.HasValue || _datePayment < DateTime.Now)" />
    </MudItem>
</MudGrid>

<MudTable Items="@Elements" Dense Hover CanCancelEdit Loading="IsBusyProgress"
          @bind-SelectedItem="selectedItem1" SortLabel="Sort By" CommitEditTooltip="Commit Edit"
          RowEditPreview="BackupItem" RowEditCancel="ResetItemToOriginalValues"
          RowEditCommit="ItemHasBeenCommitted" IsEditRowSwitchingBlocked EditTrigger="@TableEditTrigger.EditButton">
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<CashFlowViewModel, object>(x => x.PaymentDate)" InitialDirection="SortDirection.Ascending">Date</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CashFlowViewModel, object>(x => x.PaymentValue)">Value</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CashFlowViewModel, object>(x => x.CashFlowType)">Type</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Date">
            @context!.PaymentDate.ToShortDateString()
            <sup class="bi bi-x @(_initDeleteCashFlow == context.Id ? "text-danger-emphasis" : "")" title="удаление CashFlow" style="cursor:pointer;" @onclick="async () => await InitDeleteCashFlow(context.Id)">
                @if (_initDeleteCashFlow == context.Id)
                {
                    <text>Подтвердить удаление</text>
                }
            </sup>
        </MudTd>
        <MudTd DataLabel="Value">@context!.PaymentValue</MudTd>
        <MudTd DataLabel="Type">@((CashFlowTypesEnum)context!.CashFlowType)</MudTd>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd DataLabel="Date">
            <MudTextField @bind-Value="context!.PaymentDate"
                          T="DateTime"
                          Label="Date"
                          Format="yyyy-MM-dd"
                          InputType="InputType.Date"
                          Margin="Margin.Dense" />
        </MudTd>
        <MudTd DataLabel="Value">
            <MudNumericField @bind-Value="context!.PaymentValue"
                             T="decimal"
                             Label="Value"
                             Format="N2"
                             Culture="@_en"
                             Margin="Margin.Dense" />
        </MudTd>
        <MudTd DataLabel="Type">
            <MudSelect @bind-Value="context!.CashFlowType"
                       Label="Type"
                       Variant="Variant.Outlined"
                       Margin="Margin.Dense">
                @foreach (CashFlowTypesEnum state in Enum.GetValues(typeof(CashFlowTypesEnum)))
                {
                    <MudSelectItem Value="@((int)state)">@state</MudSelectItem>
                }
            </MudSelect>
        </MudTd>
    </RowEditingTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
    <EditButtonContent Context="button">
        <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Class="pa-0" OnClick="@button.ButtonAction" Disabled="@button.ButtonDisabled" />
    </EditButtonContent>
</MudTable>