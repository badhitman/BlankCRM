@using MudBlazor
@inherits BlazorBusyComponentBaseModel

@* <SyncFilesComponent Parent="this" /> *@

@if (IsBusyProgress)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate Class="my-3" />
}

@if (SelectedSyncDir is null)
{
    <div class="d-grid gap-2 mb-2">
        <button @onclick="() => OpenSyncRule()" class="btn btn-outline-primary" type="button">Добавить</button>
    </div>
}

@if (SyncDirectories.Length == 0)
{
    <figure class="text-center">
        <blockquote class="blockquote">
            <p>Нет ни одного правила синхронизации.</p>
        </blockquote>
        <figcaption class="blockquote-footer">
            Добавьте <cite @onclick="() => OpenSyncRule()" title="обмен файлами и папками с удалённой системой">правило синхронизации</cite>
        </figcaption>
    </figure>
}
else if (SelectedSyncDir is not null)
{
    <SyncManageComponent SyncDirectory="SelectedSyncDir" CloseCommand="CloseCommandAction" />
}
else
{
    <div class="list-group">
        @foreach (SyncDirectoryModelDB dir in SyncDirectories)
        {
            <div class="list-group-item list-group-item-action">
                <div class="d-flex w-100 justify-content-between">
                    <h6 @onclick="() => OpenSyncRule(dir.Id)" style="cursor:pointer;" class="mb-1 link-primary text-decoration-underline">
                        @(string.IsNullOrWhiteSpace(dir.Name) ? "-без имени-" : dir.Name)
                    </h6>
                    <small @onclick="() => SelectedSyncDir = dir" style="cursor:pointer;" class="link-success text-decoration-underline">выполнить</small>
                </div>
                <p class="mb-1">local: @dir.LocalDirectory</p>
                <small>remote: @dir.RemoteDirectory</small>
            </div>
        }
    </div>
}