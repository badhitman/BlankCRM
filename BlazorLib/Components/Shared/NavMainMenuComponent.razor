@inject IStringLocalizer<Resources> localizer

@foreach (NavItemModel nav_item in NavMenuItems)
{
    if (string.IsNullOrWhiteSpace(nav_item.AuthorizeViewRoles))
    {
        <div class="nav-item px-3">
            <NavLink class="nav-link px-3" href="@(nav_item.HrefNav)" Match="@(nav_item.IsNavLinkMatchAll? NavLinkMatch.All: NavLinkMatch.Prefix)">
                <span aria-hidden="true"></span> @localizer[nav_item.Title]
            </NavLink>
        </div>
    }
    else if (nav_item.AuthorizeViewRoles.Trim().Equals("*"))
    {
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link px-3" href="@(nav_item.HrefNav)" Match="@(nav_item.IsNavLinkMatchAll? NavLinkMatch.All: NavLinkMatch.Prefix)">
                        <span aria-hidden="true"></span>
                        @localizer.GetTranslate(nav_item.Title, StringLocalizeAreaEnum.LeftMainMenu)
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
    }
    else
    {
        <AuthorizeView Roles="@nav_item.AuthorizeViewRoles">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link px-3" href="@(nav_item.HrefNav)" Match="@(nav_item.IsNavLinkMatchAll? NavLinkMatch.All: NavLinkMatch.Prefix)">
                        <span aria-hidden="true"></span> @localizer[nav_item.Title]
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>
    }
}

@code {
    [Parameter, EditorRequired]
    public required NavItemModel[] NavMenuItems { get; set; }
}
